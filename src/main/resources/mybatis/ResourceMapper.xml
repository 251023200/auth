<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.auth.permission.dao.ResourceDao">

	<!-- Pms权限管理：部门表 -->
	<sql id="resource"> resource </sql>

	<resultMap id="beanMap" type="com.sky.auth.permission.domain.Resource">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR"  />
		<result column="uri" property="uri" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR"  />
	</resultMap>
	
	
	<insert id="insert" parameterType="com.sky.auth.permission.domain.Resource">
		insert into
		<include refid="resource" />
		(id,version,status,create_time,parent_id, code,name,type,uri,description)
		values
		(#{id},0,#{status}, #{createTime},#{parentId},#{code},#{name},#{type},#{uri},#{description})
	</insert>

	<select id="getById" parameterType="String" resultMap="beanMap">
		select * from
		<include refid="resource" />
		where id = #{id}
	</select>
	
	<select id="getResourcesByName" parameterType="com.sky.auth.permission.domain.Resource" resultMap="beanMap">
	    select * from 
	    <include refid="resource" />
	    where name=#{name}
	</select>
	
	<select id="getResourceByCode" parameterType="com.sky.auth.permission.domain.Resource" resultMap="beanMap">
	    select * from 
	    <include refid="resource" />
	    where code=#{code}
	</select>
	
	<update id="update" parameterType="com.sky.auth.permission.domain.Resource">
		update
		<include refid="resource" />
		<trim prefix="set" suffixOverrides=",">
			version = #{version}+1,
  			<if test="status!=null">status=#{status},</if>
  			<if test="parentId!=null">parent_id=#{parentId},</if>
  			<if test="type!=null">type=#{type},</if>
  			<if test="uri!=null">uri=#{uri},</if>
  			<if test="name!=null">name=#{name},</if>
  			<if test="code!=null">code=#{code},</if>
  			<if test="description!=null">description=#{description},</if>
 		</trim>
		<where>
			id = #{id}
		</where>
	</update>

	<delete id="deleteById" parameterType="String">
		delete from
		<include refid="resource"/>
		where id = #{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from
		<include refid="resource" />
		where id in 
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
 		 #{item}  
 		 </foreach>
	</delete>
	
	<delete id="batchDelete" parameterType="String">
		delete from
		<include refid="resource" />
		where id in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
 		 #{item.id}  
 		</foreach>
	</delete>

	<select id="listAll" resultMap="beanMap">
		select * from
		<include refid="resource" />
	</select>

	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="code != null and code != ''"> and code = #{code}</if>
		<!-- Like query -->
		<if test="name != null and name != ''"> and name like CONCAT(CONCAT('%', #{name}), '%')</if>
	</sql>
	
	<select id="search" parameterType="com.sky.auth.permission.domain.Resource" resultMap="beanMap">
		select * from 
		<include refid="resource" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="resource" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by create_time desc
		limit #{from},#{size}
	</select>

	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="resource" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

</mapper>