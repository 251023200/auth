<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.auth.permission.dao.MenuDao">

	<sql id="menu"> menu </sql>
	
	<resultMap id="beanMap" type="com.sky.auth.permission.domain.Menu">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR"  />
		<result column="icon" property="icon" jdbcType="VARCHAR"  />
		<result column="url" property="url" jdbcType="VARCHAR"  />
		<result column="is_leaf" property="isLeaf" jdbcType="VARCHAR"  />
		<result column="seq" property="seq" jdbcType="INTEGER"  />
		<result column="level" property="level" jdbcType="INTEGER"  />
		<result column="active" property="active" jdbcType="INTEGER"  />
		<result column="remark" property="remark" jdbcType="VARCHAR"  />
	</resultMap>
	
	<insert id="insert" parameterType="com.sky.auth.permission.domain.Menu">
		insert into
		<include refid="menu" />
		(id,version,status,create_time,name,icon,url,parent_id,seq,is_leaf,level,active,remark) values
		( #{id},0,#{status},#{createTime},
		#{name,jdbcType=VARCHAR},
		#{icon,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},
		#{parentId,jdbcType=VARCHAR},
		#{seq,jdbcType=INTEGER},
		#{isLeaf,jdbcType=VARCHAR},
		#{level,jdbcType=INTEGER},
		#{active,jdbcType=INTEGER},
		#{remark,jdbcType=INTEGER}
		)
	</insert>

	<select id="getById" parameterType="String" resultMap="beanMap">
		select * from
		<include refid="menu" />
		where id = #{id}
	</select>
	
	<update id="update" parameterType="com.sky.auth.permission.domain.Menu">
		update
		<include refid="menu" />
		<trim prefix="set" suffixOverrides=",">
			version = #{version}+1,
  			<if test="name!=null">name=#{name},</if>
  			<if test="url!=null">url=#{url},</if>
  			<if test="parentId!=null">parent_id=#{parentId},</if>
  			<if test="seq!=null">seq=#{seq},</if>
  			<if test="isLeaf!=null">is_leaf=#{isLeaf},</if>
  			<if test="level!=null">level=#{level},</if>
  			<if test="active!=null">active=#{active},</if>
  			<if test="remark!=null">remark=#{remark},</if>
 		</trim>
		where ID = #{id}
	</update>

	<delete id="deleteById" parameterType="String">
		delete from
		<include refid="menu" />
		where ID = #{id}
	</delete>
	
	<select id="listAll" resultMap="beanMap">
		select * from
		<include refid="menu" />
	</select>
	
	
	<select id="listByParentId" parameterType="String" resultMap="beanMap">
		select * from
		<include refid="menu" />
		where parent_id = #{parentId}
	</select>

	<!-- 查询用户拥有的菜单 -->
	<select id="getMenusByUserId" parameterType="String" resultMap="beanMap">
		select menu.* 
		from user,user_role,role_menu,menu 
		where user.id=#{userId} and user.id=user_role.user_id and user_role.role_id=role_menu.role_id and role_menu.menu_id=menu.id
		
		union
		
		select menu.*
		from user_role,role_permission,permission_menu,menu
		where user_role.user_id=#{userId} and user_role.role_id=role_permission.role_id and role_permission.permission_id=permission_menu.permission_id and permission_menu.menu_id=menu.id
	</select>
	
	<!-- 查询角色拥有的菜单 -->
	<select id="getMenusByRoleId" parameterType="String" resultMap="beanMap">
		select menu.* 
		from role_menu,Menu
		where role_id = #{roleId} and role_menu.menu_id=menu.id
		union
		select menu.*
		from role_permission,permission_menu,menu
		where role_permission.permission_id=permission_menu.permission_id and permission_menu.menu_id=menu.id and role_permission.role_id=#{roleId}
	</select>
	
	<!-- <select id="listByRoleIds" parameterType="string" resultType="com.sky.sperm.permission.entity.PmsMenu">
		select distinct * from (
		select
		m.id as "id",
		m.version as "version",
		m.parent_id as "parentId",
		m.name as "name",
		m.is_leaf as "isLeaf",
		m.level as "level",
		m.url as "url",
		m.icon as "icon",
		m.target_name as "targetName",
		m.number as number
		from
		<include refid="pms_role" />
		r
		left join
		<include refid="pms_role_menu" />
		rm
		on r.id = rm.role_id
		left join
		<include refid="pms_menu" />
		m
		on rm.menu_id = m.id
		where r.id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
		) as mt order by mt.number asc
	</select> -->
	
	<!-- 
    <select  id="listByRoleIds"  parameterType="string" resultType="com.sky.auth.permission.domain.Menu">
      select DISTINCT 
         pms_menu.id as "id",
		pms_menu.version as "version",
		pms_menu.parent_id as "parentId",
		pms_menu.name as "name",
		pms_menu.is_leaf as "isLeaf",
		pms_menu.level as "level",
		pms_menu.url as "url",
		pms_menu.icon as "icon",
		pms_menu.target_name as "targetName",
		pms_menu.number as number
		
		 from pms_role,pms_role_permission,pms_menu
		
		where pms_role.id=pms_role_permission.role_id
		 and pms_role_permission.permission_id=pms_menu.id
		
		and pms_role.id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
		order by pms_menu.number
    </select>
    -->
</mapper>
